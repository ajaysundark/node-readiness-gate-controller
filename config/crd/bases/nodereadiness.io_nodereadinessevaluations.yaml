---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.19.0
  name: nodereadinessevaluations.nodereadiness.io
spec:
  group: nodereadiness.io
  names:
    kind: NodeReadinessEvaluation
    listKind: NodeReadinessEvaluationList
    plural: nodereadinessevaluations
    shortNames:
    - nre
    singular: nodereadinessevaluation
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.nodeName
      name: Node
      type: string
    - jsonPath: .spec.ruleName
      name: Rule
      type: string
    - jsonPath: .status.taintStatus
      name: TaintStatus
      type: string
    - jsonPath: .status.allConditionsSatisfied
      name: Ready
      type: boolean
    - jsonPath: .status.evaluationCount
      name: Evaluations
      priority: 1
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NodeReadinessEvaluation represents the evaluation state of a
          single node against a NodeReadinessRule
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec defines the desired state of NodeReadinessEvaluation
            properties:
              nodeName:
                description: NodeName is the name of the node being evaluated
                type: string
              ruleGeneration:
                description: |-
                  RuleGeneration is the generation of the rule at evaluation time
                  Used to track if the rule has changed since evaluation
                format: int64
                type: integer
              ruleName:
                description: RuleName is the name of the NodeReadinessRule this evaluation
                  belongs to
                type: string
            required:
            - nodeName
            - ruleGeneration
            - ruleName
            type: object
          status:
            description: status defines the observed state of NodeReadinessEvaluation
            properties:
              allConditionsSatisfied:
                description: AllConditionsSatisfied indicates whether all required
                  conditions are satisfied
                type: boolean
              conditionResults:
                description: ConditionResults contains the evaluation result for each
                  condition
                items:
                  description: ConditionEvaluationResult represents the evaluation
                    of a single condition requirement
                  properties:
                    currentStatus:
                      description: CurrentStatus is the actual status of the condition
                        on the node
                      type: string
                    missing:
                      description: Missing indicates whether the condition is present
                        on the node
                      type: boolean
                    requiredStatus:
                      description: RequiredStatus is the status required by the rule
                      type: string
                    satisfied:
                      description: Satisfied indicates whether the condition requirement
                        is met
                      type: boolean
                    type:
                      description: Type is the name of the evaluated condition
                      type: string
                  required:
                  - currentStatus
                  - missing
                  - requiredStatus
                  - satisfied
                  - type
                  type: object
                type: array
              consecutiveErrors:
                description: ConsecutiveErrors tracks the number of consecutive evaluation
                  failures
                type: integer
              evaluationCount:
                description: EvaluationCount tracks how many times this node has been
                  evaluated
                type: integer
              lastError:
                description: LastError contains the error message from the last failed
                  evaluation
                type: string
              lastErrorTime:
                description: LastErrorTime is the timestamp of the last error
                format: date-time
                type: string
              lastEvaluated:
                description: LastEvaluated is the timestamp of the last evaluation
                format: date-time
                type: string
              taintStatus:
                description: 'TaintStatus indicates the current taint state: "Present",
                  "Absent", or "Unknown"'
                type: string
            required:
            - allConditionsSatisfied
            - lastEvaluated
            - taintStatus
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
